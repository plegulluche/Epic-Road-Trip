{
  "swagger": "2.0",
  "info": {
    "title": "Trip Planner API",
    "version": "1.0.0",
    "description": ""
  },
  "host": "localhost:4000/api",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User to register",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "country": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "country"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User to login",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/places": {
      "get": {
        "tags": [
          "Places"
        ],
        "description": "Endpoint to fetch nearby places based on latitude, longitude, and radius.",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "Address of the location to search for nearby places.",
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "Latitude of the location to search for nearby places.",
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "Longitude of the location to search for nearby places.",
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius (in meters) of the area to search for nearby places.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types of places to search for.",
            "required": true,
            "type": "array",
            "example": "restaurant,bar,cafe,tourist_attraction,museum"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of nearby places.",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "array"
                },
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "object"
                    },
                    "properties": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "description": {
                              "type": "string",
                              "example": "The name of the place."
                            }
                          }
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            },
                            "description": {
                              "type": "string",
                              "example": "The address of the place."
                            }
                          }
                        },
                        "location": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "description": {
                              "type": "string",
                              "example": "The coordinates of the place."
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "lat": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    },
                                    "description": {
                                      "type": "string",
                                      "example": "The latitude of the place."
                                    }
                                  }
                                },
                                "lng": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    },
                                    "description": {
                                      "type": "string",
                                      "example": "The longitude of the place."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Failed to fetch places."
          }
        }
      }
    },
    "/places/details/{placeId}": {
      "get": {
        "tags": [
          "Places"
        ],
        "description": "Endpoint to fetch details of a place based on its place ID.",
        "parameters": [
          {
            "name": "placeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The place ID of the place to fetch details for."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "apis": [
    "./routes/userRoutes.js",
    "./routes/placesRoutes.js"
  ]
}