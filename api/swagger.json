{
  "swagger": "2.0",
  "info": {
    "title": "Trip Planner API",
    "version": "1.0.0",
    "description": ""
  },
  "host": "localhost:4000/api",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User to register",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "string"
                },
                "lastName": {
                  "type": "string",
                  "example": "string"
                },
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                },
                "country": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "country"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User to login",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "string"
                },
                "password": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/drinks/": {
      "get": {
        "tags": [
          "Drink"
        ],
        "summary": "Get bars",
        "description": "",
        "parameters": [
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for bars that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of bars to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of bars to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for bars",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "default": "13003",
            "description": "Categories of bars to search for. See codes below:   All Bar (13003),   Apres Ski Bar (13004),   Beach Bar (13005),   Beer Bar (13006),   Beer Garden (13007),   Champagne Bar (13008),   Cocktail Bar (13009),   Dive Bar (13010),   Gay Bar (13011),   Hookah Bar (13012),   Hotel Bar (13013),   Ice Bar (13014),   Karaoke Bar (13015),   Lounge (13016),   Piano Bar (13017),   Pub (13018),   Rooftop Bar (13019),   Sake Bar (13020),   Speakeasy (13021),   Sports Bar (13022),   Tiki Bar (13023),   Whisky Bar (13024),   Wine Bar (13025)   ",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for bars",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for bars",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/eats/": {
      "get": {
        "tags": [
          "Eat"
        ],
        "summary": "Get restaurants",
        "description": "",
        "parameters": [
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for restaurants that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of restaurants to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of restaurants to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for restaurants",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "default": "13065",
            "description": "Categories of restaurants to search for.    See codes below:\nAll (13065),\nFrench Restaurant (13148),\nItalian Restaurant (13236),   \nJapanese Restaurant (13263),\nMediterranean Restaurant (13302),\nMiddle Eastern Restaurant (13309),   \nPizza Place (13064),\nSeafood Restaurant (13338),\nSteakhouse (13383),\nThai Restaurant (13352),   \nTurkish Restaurant (13356),   \nAmerican Restaurant (13146),\nAsian Restaurant (13147),\nBarbecue Restaurant (13149),   \nBistro (13150),\nBurger Joint (13151),\nCaf√© (13152),\nChinese Restaurant (13153),   \nCoffee Shop (13154),\nDeli / Bodega (13155),\nDiner (13156),\nFast Food Restaurant (13157),   \nFood Court (13158),\nFood Truck (13159),\nGreek Restaurant (13160),\nIndian Restaurant (13161),   \nIrish Pub (13162),\nKorean Restaurant (13163),\nLatin American Restaurant (13164),   \nMexican Restaurant (13165),\nNew American Restaurant (13166),\nPakistani Restaurant (13167),   \nPizza Place (13168),\nPub (13169),\nRestaurant (13170),\nSandwich Place (13171),   \nSushi Restaurant (13172),\nTapas Restaurant (13173),\nTea Room (13174),\nVegetarian / Vegan Restaurant (13175),   ",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for restaurants",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for restaurants",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sleep/": {
      "get": {
        "tags": [
          "Sleep"
        ],
        "summary": "Get lodging",
        "description": "",
        "parameters": [
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for lodging that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of lodging to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of lodging to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for lodging",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "default": "19009",
            "description": "Categories of bars to search for. See codes below:   All Lodging (19009),   Bed & Breakfast (19010),   Boarding House (19011),   Cottage/Cabin (19012),   Hostel (19013),   Hotel (19014),   Inn (19015),   Lodge (19016),   Motel (19017),   Resort (19018),   Vacation Rental (19019)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for lodging",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for lodging",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/travel/": {
      "get": {
        "tags": [
          "Travel"
        ],
        "summary": "Get transportation",
        "description": "",
        "parameters": [
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for transportation that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of transportation to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of transportation to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for transportation",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "default": "19000",
            "description": "Categories of transportation service and transport hub to search for.  See codes below:\nAll (19000)\nBaggage Locker (19001)\nBike Rental (19002)\nTransportation Service (19051),\nCharter Bus (19052),\nLimo / Chauffeur (19053),  \nPublic Transportation (19054),\nTransport Hub (19030),\nAirport (19031),\nAirfield (19032),  \nAirport Food Court (19033),\nAirport Gate (19034),\nAirport Lounge (19035),\nAirport Service (19036),  \nAirport Terminal (19037),\nAirport Tram Station (19038),\nBaggage Claim (19039),  \nInternational Airport (19040),\nPrivate Airport (19041),\nBus Station (19042),\nBus Stop (19043),  \nHeliport (19044),\nMarine Terminal (19045),\nMetro Station (19046),\nRail Station (19047),  \nRental Car Location (19048),\nTaxi Stand (19049),\nTram Station (19050)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for transportation",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for transportation",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/enjoy/": {
      "get": {
        "tags": [
          "Enjoy"
        ],
        "summary": "Get enjoy",
        "description": "",
        "parameters": [
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for enjoy that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of enjoy to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of enjoy to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for enjoy",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "default": "14000",
            "description": "Categories of events to search for.  See codes below:\nAll (14000),\nConference (14001),\nConvention (14002),  \nEntertainment Event (14003),\nFestival (14004),\nMusic Festival (14005),\nParade (14006),  \nSporting Event (14007),\nLine / Queue (14008),\nMarketplace (14009),\nChristmas Market (14010),  \nStoop Sale (14011),\nStreet Fair (14012),\nStreet Food Gathering (14013),\nTrade Fair (14014),  \nOther Event (14015)",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for enjoy",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for enjoy",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/place-details/{fsq_id}": {
      "get": {
        "tags": [
          "PlaceDetails"
        ],
        "summary": "Fetch Place Details from Foursquare API and save to MongoDB",
        "description": "",
        "parameters": [
          {
            "name": "fsq_id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Foursquare ID of the place"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/search-parameters": {
      "post": {
        "tags": [
          "SearchParameters"
        ],
        "summary": "Save search parameters",
        "description": "",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for enjoy",
            "required": false,
            "type": "string"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for enjoy",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for enjoy",
            "required": false,
            "type": "number"
          },
          {
            "name": "open_now",
            "in": "query",
            "description": "Whether to search for enjoy that are open now",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "min_price",
            "in": "query",
            "description": "Minimum price of enjoy to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "max_price",
            "in": "query",
            "description": "Maximum price of enjoy to search for (1-4)",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters",
            "required": false,
            "type": "number"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Categories of events to search for",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "SearchParameters"
        ],
        "summary": "Get search parameters",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/directions": {
      "post": {
        "tags": [
          "Directions"
        ],
        "summary": "Get route coordinates",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Get route coordinates",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "origin": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "example": 0
                    },
                    "lng": {
                      "type": "number",
                      "example": 0
                    }
                  }
                },
                "destination": {
                  "type": "object",
                  "properties": {
                    "lat": {
                      "type": "number",
                      "example": 0
                    },
                    "lng": {
                      "type": "number",
                      "example": 0
                    }
                  }
                },
                "waypoints": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lat": {
                        "type": "number",
                        "example": 0
                      },
                      "lng": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              },
              "required": [
                "origin",
                "destination",
                "waypoints"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Directions"
        ],
        "summary": "Get directions history by user",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/directions/saved/": {
      "get": {
        "tags": [
          "Directions"
        ],
        "summary": "Get saved directions by user",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events/": {
      "get": {
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "description": "",
        "parameters": [
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for events",
            "required": false,
            "type": "string"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for events",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for events",
            "required": false,
            "type": "number"
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius of search in meters, 500m by default",
            "required": false,
            "type": "number"
          },
          {
            "name": "within",
            "in": "query",
            "description": "Do not use",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Event ids",
            "type": "string"
          },
          {
            "name": "like",
            "in": "query",
            "description": "Event ids",
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "Event labels",
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Event country",
            "type": "string"
          },
          {
            "name": "start_around.origin",
            "in": "query",
            "description": "Event start_around.origin",
            "type": "string"
          },
          {
            "name": "start_around.offset",
            "in": "query",
            "description": "Event start_around.offset",
            "type": "string"
          },
          {
            "name": "start_around.scale",
            "in": "query",
            "description": "Event start_around.scale",
            "type": "string"
          },
          {
            "name": "start_around.decay",
            "in": "query",
            "description": "Event start_around.decay",
            "type": "number"
          },
          {
            "name": "end_around.origin",
            "in": "query",
            "description": "Event end_around.origin",
            "type": "string"
          },
          {
            "name": "end_around.offset",
            "in": "query",
            "description": "Event end_around.offset",
            "type": "string"
          },
          {
            "name": "end_around.scale",
            "in": "query",
            "description": "Event end_around.scale",
            "type": "string"
          },
          {
            "name": "end_around.decay",
            "in": "query",
            "description": "Event end_around.decay",
            "type": "number"
          },
          {
            "name": "location_around.origin",
            "in": "query",
            "description": "Event location_around.origin",
            "type": "string"
          },
          {
            "name": "location_around.offset",
            "in": "query",
            "description": "Event location_around.offset",
            "type": "string"
          },
          {
            "name": "location_around.scale",
            "in": "query",
            "description": "Event location_around.scale",
            "type": "string"
          },
          {
            "name": "location_around.decay",
            "in": "query",
            "description": "Event location_around.decay",
            "type": "number"
          },
          {
            "name": "start",
            "in": "query",
            "description": "Event start",
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "description": "Event end",
            "type": "string"
          },
          {
            "name": "updated",
            "in": "query",
            "description": "Event updated",
            "type": "string"
          },
          {
            "name": "rank_level",
            "in": "query",
            "description": "Event rank_level",
            "type": "string"
          },
          {
            "name": "local_rank_level",
            "in": "query",
            "description": "Event local_rank_level",
            "type": "string"
          },
          {
            "name": "aviation_rank_level",
            "in": "query",
            "description": "Event aviation_rank_level",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "description": "Event duration",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "   --Attendee categories--\n   community\n   concerts\n   conferences\n   festivals\n   performing-arts\n   sports\n   expos\n     --Non-attendee categories--\n   academic\n   daylight-savings\n   observances\n   politics\n   public-holidays\n   school-holidays\n     --Unscheduled categories--\n   airport-delays\n   disasters\n   health-warnings\n   severe-weather\n   terror\n   ",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Event limit",
            "type": "number"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Event offset",
            "type": "number"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "   id,   title,   start,   end,   rank,   local_rank,   aviation_rank,   category,   duration,   country,   labels,   -id,   -title,   -start,   -end,   -rank,   -local_rank,   -aviation_rank,   -category,   -duration,   -country,   -labels   ",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/events/recommend": {
      "get": {
        "tags": [
          "Event"
        ],
        "description": "Get recommended events",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of location to search for events",
            "required": false,
            "type": "number"
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of location to search for events",
            "required": false,
            "type": "number"
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location to search for events",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/event-favorites": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Add event to favorites, ",
        "description": "",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add event to favorites",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "eventFavorites": {
                  "type": "string",
                  "example": "string"
                }
              },
              "required": [
                "eventFavorites"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get event favorites by user",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "apis": [
    "./routes/userRoutes.js",
    "./routes/drinkRoutes.js",
    "./routes/eatRoutes.js",
    "./routes/sleepRoutes.js",
    "./routes/travelRoutes.js",
    "./routes/enjoyRoutes.js",
    "./routes/placeDetailRoutes.js",
    "./routes/searchParametersRoutes.js",
    "./routes/directionsRoutes.js",
    "./routes/eventRoutes.js",
    "./routes/userParameterRoutes.js"
  ]
}